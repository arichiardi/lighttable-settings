[user]
    email = "a.richiardi.work@gmail.com"
    name = "Andrea Richiardi"
    signingkey = 0x5BB502F6
[gpg]
    program = gpg2
[color]
    filemode = false
    diff = auto
    status = auto
    branch = auto
    pager = true
[pull]
    rebase = true
[push]
    default = simple
[core]
    editor = emacsclient -t
    autocrlf = false
[rebase]
    tool = meld184
    conflictstyle = diff3
    autosquash = true
[branch]
    autosetuprebase = always
[include]
    path = ~/.gitidentities/a.richiardi.work@gmail.com
[merge]
    tool = meld-merge-script
[mergetool "meld-merge-script"]
    cmd = ~/bin/meld-merge-script \"$LOCAL\" \"$REMOTE\" \"$MERGED\" \"$BASE\"
    trustExitCode = true
[diff]
    compactionHeuristic = true
[diff "jpg"]
    binary = true
    textconv = hexdump -v -C
[diff "jpeg"]
    binary = true
    textconv = hexdump -v -C
[diff-so-fancy]
    markEmptyLines = true
    changeHunkIndicators = false
    stripLeadingSymbols = false
[pager]
    diff = diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '
[alias]
    apr = "apply --reject"
    co = "checkout"
    s = "status"
    b = "branch"
    ba = "branch -v -a"
    c = "commit"
    p = "pull"
    f = "fetch -v"
    fp = "!f() { git fetch -v && git pull; }; f"
    fa = "fetch -v --all"
    pr = "pull --rebase"
    a = "add"
    aa = "add -A"
    ai = "add --interactive"
    ap = "add --patch"
    ca = "commit --amend"
    cp = "cherry-pick"
    cpc = "cherry-pick --continue"
    cpa = "cherry-pick --abort"
    d = "diff"
    df = "diff --name-only"
    dh = "diff HEAD"
    dh1 = "diff HEAD^"
    ds = "diff --staged"
    rmt = "remote"
    rmta = "remote add"
    rmtv = "remote --verbose"
    r = "rebase"
    rc = "rebase --continue"
    ri = "rebase --interactive"
    ra = "rebase --abort"
    rmc = "rm --cached"
    ss = status --short -uno
    ln = log --graph --decorate --pretty=oneline --abbrev-commit
    lna = log --graph --decorate --pretty=format:"%h%x09%an%x09%ad%x09%s" --abbrev-commit
    patch = !git --no-pager diff --no-color
    fixup = !sh -c 'REV=$(git rev-parse $1) && git commit --fixup $@ && git rebase -i --autosquash $REV^' -
    fixprev = "!f() { SHA=$(git rev-parse HEAD) && REV=$(git rev-parse $SHA) && git commit --fixup $SHA && git rebase -i --autosquash $REV^; }; f -"
    squash = !sh -c 'REV=$(git rev-parse $1) && git commit --squash $@ && git rebase -i --autosquash $REV^' -
    squaprev = "!f() { SHA=$(git rev-parse HEAD) && REV=$(git rev-parse $SHA) && git commit --squash $SHA && git rebase -i --autosquash $REV^; }; f -"
    alias = config --get-regexp ^alias\\.
    my = "mergetool -y"
    fl = "log -u"
    assume = "update-index --assume-unchanged"
    unassume = "update-index --no-assume-unchanged"
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    ours = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
    rsa = "reset HEAD *"
    rsh = "reset HEAD"
    rsh1 = "reset HEAD^"
    rshhh = "reset --hard"
    sa = "stash apply"
    sl = "stash list"
    ski = "stash save --keep-index"
    rmsub = "!f(){ git rm --cached \"$1\";rm -rv \"$1\";rm -rfv \".git/modules/$1\";git config -f .gitmodules --remove-section \"submodule.$1\";git config -f .git/config --remove-section \"submodule.$1\";git add .gitmodules; }; f"
