;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together to create
;; the final set of keys. You can modify these diffs to either add or
;; subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").
{ :+ { :app { "ctrl-shift-a" [:show-commandbar-transient]
              "ctrl-o" [:claire-show]
              "ctrl-f" [:find.fill-selection :find.show]
              "shift-f1" [:docs.search.show]
              "ctrl-alt-c" [:console-tab :tabs.goto :last :tabs.move-new-tabset]
              "ctrl-shift-c" [:clear-console]
              "esc" [:find.hide]}

       :editor { "alt-w" [:editor.watch.watch-selection]
                 "alt-shift-w" [:editor.watch.unwatch]
                 "ctrl-space" [:auto-complete]
                 "ctrl-y" [:editor.delete-line]
                 "ctrl-b" [:editor.jump-to-definition-at-cursor ]
                 "ctrl-shift-b" [:editor.unjump]
                 "ctrl-s" [:save]
                 "ctrl-q" [:editor.doc.toggle]
                 "ctrl-." [:editor.fold-code]
                 "ctrl-/" [:toggle-comment-selection]
                 "ctrl-[" [:editor.sublime.goToBracket]
                 "ctrl-]" [:editor.sublime.goToBracket]

                 ;; Indenting
                 "ctrl-alt-i" [(:paredit.select.parent "(") :smart-indent-selection :paredit.select.clear]
                 "ctrl-0" [:editor.column-left :paredit.select.parent :smart-indent-selection :paredit.select.clear :editor.sublime.insertLineAfter :editor.sublime.insertLineAfter]

                 ;; Killing
                 "alt-backspace" [:editor.delete-word-left]
                 "alt-del" [:editor.delete-word-right]
                 "ctrl-shift-k" [:paredit-plus.splice-sexp-killing-forward]
                 "ctrl-shift-alt-k" [:paredit-plus.splice-sexp-killing-backward]

                 ;; Paredit
                 "ctrl-w" [:paredit.select.parent :p]
                 "ctrl-shift-w" [:editor.sublime.selectBetweenBrackets]
                 "ctrl-alt-b" [:subpar.move.backward-up]
                 "ctrl-alt-f" [:subpar.move.forward-up]
                 "ctrl-alt-u" [:subpar.move.backward-down]
                 "ctrl-alt-d" [:subpar.move.forward-down]
                 "alt-r" [:paredit-plus.raise-sexp]

                 ;; Slurps
                 "ctrl-right" [:paredit.grow.right]
                 "ctrl-shift-right" [:paredit.grow.left]

                 ;; Barfs
                 "ctrl-left" [:paredit.shrink.right]
                 "ctrl-shift-left" [:paredit.shrink.left]}

       :editor.keys.normal { "f3" [:find.next]
                             "shift-f3" [:find.prev]}}

  :- { :editor.keys.normal { "ctrl-g" [:find.next]
                             "ctrl-shift-g" [:find.prev]
                             "shift-0" []}
       :tabs {"ctrl-w" [] "ctrl-1" [] "ctrl-2" [] "ctrl-3" []
              "ctrl-4" [] "ctrl-5" [] "ctrl-6" [] "ctrl-7" [] "ctrl-8" []
              "ctrl-9" [] "ctrl-shift-[" [] "ctrl-shift-]" []
              }
       :app { "ctrl-x ctrl-f" [:claire-show]}
       }}


