#!/bin/bash

script_name=$(basename "$0")

do_usage() {
    echo -n
    echo "Usage:"
    echo "$script_name [-s|--secret] -p|--prefix *desination prefix* -d|--dest *destination folder*"
    exit 1
}

set +e
TEMP=`getopt -o hsd:l: --long help,secret,dest:,label: -n "$script_name" -- "$@"`
set -e
eval set -- "$TEMP"

is_secret=false
dest_dir=
dest_label=

# extract options and their arguments into variables.
while true ; do
    case "$1" in
        -s|--secret) is_secret=true ; shift ;;
        -l|--label) dest_label="$2"; shift 2 ;;
        -d|--dest) dest_dir="$2" ; shift 2 ;;
        -h|--help) shift ; do_usage ; break ;;
        --) shift ; break ;;
        :) echo "Error: -${OPTARG} requires an argument." ; do_usage ;;
        *) do_usage ; exit 1 ;;
    esac
done

if [ -z "$dest_dir" ] ; then
    echo "Destination (-d|--dest) is required."
    do_usage
    exit 1
fi

dest_dir=$(readlink -e "$dest_dir")

if [ ! -d "$dest_dir" ] ; then
    echo "Destination $dest_dir not found."
    exit 1
fi

dest_name=gnupg

if [ -n "$dest_label" ] ; then
    dest_name=gnupg-$dest_label
fi

dest_file="$dest_dir/$dest_name-$(date "+%Y%m%d").tar"

if [ -f "$dest_file" ] ; then
    echo -e "File \"$dest_file\" exists.\nAborting."
    exit 1
fi

tar -cf "$dest_file" \
    --exclude "*/.#*" \
    --exclude "*~" \
    -C "$HOME" .gnupg

if [ "$is_secret" == "true" ]; then
    secret --backup --src "$dest_file" --dest "$dest_file".enc
fi
